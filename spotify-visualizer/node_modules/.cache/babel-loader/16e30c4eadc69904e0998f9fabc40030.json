{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\LZN\\\\Processing\\\\SpotifyVisualizerReact\\\\SpotifyVisualizerReact\\\\spotify-visualizer\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\LZN\\\\Processing\\\\SpotifyVisualizerReact\\\\SpotifyVisualizerReact\\\\spotify-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nexport default function sketch(p) {\n  function fetchData(accessToken) {\n    return new Promise(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(resolve, reject) {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('https://api.spotify.com/v1/me/player', {\n                  headers: {\n                    'Authorization': 'Bearer ' + accessToken\n                  }\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (data) {\n                  id = data.item.id;\n                  return id;\n                });\n\n              case 2:\n                results = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  function getURLParams(req) {\n    var uri = window.location.href;\n    var url = new URL(uri);\n    var res = url.searchParams.get(req);\n    return res;\n  }\n\n  function getAudioFeatures(id, access_token) {\n    return new Promise(\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(resolve, reject) {\n        var apiURL, song_id, fetchURL, results;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                apiURL = 'https://api.spotify.com/v1/audio-features/';\n                console.log(apiURL);\n                song_id = id;\n                fetchURL = apiURL.concat(song_id);\n                console.log(fetchURL);\n                _context2.next = 8;\n                return fetch(fetchURL, {\n                  headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer\" + access_token\n                  }\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (data) {\n                  var audioAnalysis = [];\n                  audioAnalysis.push({\n                    \"BPM\": data.tempo,\n                    \"danceability\": data.danceability\n                  });\n                });\n\n              case 8:\n                results = _context2.sent;\n                return _context2.abrupt(\"return\", resolve(results));\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](0);\n                return _context2.abrupt(\"return\", reject(_context2.t0));\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 12]]);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }\n\n  function whyamidoingthis() {\n    var access_token = getURLParams(\"access_token\");\n  }\n\n  function doEverything() {\n    return _doEverything.apply(this, arguments);\n  }\n\n  function _doEverything() {\n    _doEverything = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var access_token, id, audioAnalysis;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return getURLParams(\"access_token\");\n\n            case 2:\n              access_token = _context3.sent;\n              // let id = await fetchData(access_token);\n              id = whyamidoingthis();\n              _context3.next = 6;\n              return getAudioFeatures(id, access_token);\n\n            case 6:\n              audioAnalysis = _context3.sent;\n              console.log(id);\n              return _context3.abrupt(\"return\", audioAnalysis);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    return _doEverything.apply(this, arguments);\n  }\n\n  var audioAnalysis = doEverything();\n  console.log(audioAnalysis);\n  var diameter;\n  var test = {\n    \"BPM\": 100\n  };\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth, p.windowHeight, p.P2D);\n    p.colorMode(p.HSB, 360, 100, 100);\n    p.noStroke();\n    p.ellipseMode(p.RADIUS);\n    p.frameRate(600);\n  };\n  /**\r\n   * draw function should take the audio analysis\r\n   * on every half beat (tatum) change circle radius\r\n   * have like a mild gradient from last radius to current radius \r\n   * change circle colour every beat\r\n   * change size according to volume\r\n   * beat circle to tempo from API\r\n   */\n\n\n  p.draw = function () {\n    p.clear();\n    var r = p.millis() / (1000 / (test.BPM / 60.0));\n    r -= p.int(r);\n    diameter = p.map(r, 0, 2.5, 400, 0); //map the bpm to diameter, and then change diameter each frame to increase/decrease based on tatums\n    // console.log(diameter)\n    // *slightly* slow down the seizure-inducing radial gradient effects\n\n    for (var i = 0; i < 7; i++) {\n      p.drawGradient(p.windowWidth / 2, p.windowHeight / 2);\n    }\n  };\n\n  p.getR = function (props) {\n    return props.tempo;\n  };\n\n  p.getDanceability = function (props) {\n    return props.danceability;\n  }; //makes it look like a speaker driver bouncing around in a weird way\n\n\n  p.drawGradient = function (x, y) {\n    var radius = diameter / 2;\n    var randColor = p.random(0, 360);\n\n    for (var r = radius; r > 0; --r) {\n      p.fill(200, randColor, 120); //blue\n\n      p.ellipse(x, y, r, r);\n      randColor = (randColor + 1) % 69; //tried random numbers until it looked good\n    }\n  };\n}","map":{"version":3,"sources":["D:\\LZN\\Processing\\SpotifyVisualizerReact\\SpotifyVisualizerReact\\spotify-visualizer\\src\\views\\js\\sketch.js"],"names":["sketch","p","fetchData","accessToken","Promise","resolve","reject","fetch","headers","then","response","json","data","id","item","results","getURLParams","req","uri","window","location","href","url","URL","res","searchParams","get","getAudioFeatures","access_token","apiURL","console","log","song_id","fetchURL","concat","audioAnalysis","push","tempo","danceability","whyamidoingthis","doEverything","diameter","test","setup","createCanvas","windowWidth","windowHeight","P2D","colorMode","HSB","noStroke","ellipseMode","RADIUS","frameRate","draw","clear","r","millis","BPM","int","map","i","drawGradient","getR","props","getDanceability","x","y","radius","randColor","random","fill","ellipse"],"mappings":"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","sourcesContent":["export default function sketch(p) {\r\n\r\n    function fetchData(accessToken) {\r\n        return new Promise(async (resolve, reject) => {\r\n            let results = await\r\n            fetch('https://api.spotify.com/v1/me/player', {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + accessToken}\r\n            }).then(response => response.json()).then(data => {\r\n                    id = data.item.id\r\n                    return id;\r\n            })\r\n        })\r\n\r\n        }  \r\n\r\n    function getURLParams(req) {\r\n        var uri = window.location.href;\r\n        var url = new URL(uri);\r\n        var res = url.searchParams.get(req);\r\n        return res\r\n    }\r\n\r\nfunction getAudioFeatures(id, access_token) {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            let apiURL = 'https://api.spotify.com/v1/audio-features/'\r\n            console.log(apiURL)\r\n            let song_id = id;\r\n            let fetchURL = apiURL.concat(song_id);\r\n            console.log(fetchURL);\r\n            let results = await \r\n            fetch(fetchURL, {\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer\" + access_token}\r\n                }).then(response => response.json()).then(data => {\r\n                    let audioAnalysis = [];\r\n                    audioAnalysis.push({\r\n                        \"BPM\": data.tempo,\r\n                        \"danceability\": data.danceability\r\n                    })\r\n                })\r\n                return resolve(results)\r\n            } catch (e) {\r\n                return reject(e);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\nfunction whyamidoingthis() {\r\n    let access_token = getURLParams(\"access_token\");\r\n}\r\n\r\nasync function doEverything() {\r\n    let access_token = await getURLParams(\"access_token\");\r\n    // let id = await fetchData(access_token);\r\n    let id = whyamidoingthis();\r\n    let audioAnalysis = await getAudioFeatures(id, access_token);\r\n    console.log(id);\r\n    return audioAnalysis;\r\n}\r\n\r\nvar audioAnalysis = doEverything();\r\nconsole.log(audioAnalysis);\r\n\r\nvar diameter;\r\n\r\nconst test = {\r\n    \"BPM\": 100,\r\n}\r\n\r\np.setup = function() {\r\n    p.createCanvas(p.windowWidth, p.windowHeight, p.P2D);\r\n    p.colorMode(p.HSB, 360, 100, 100);\r\n    p.noStroke();\r\n    p.ellipseMode(p.RADIUS);\r\n    p.frameRate(600);\r\n}\r\n\r\n\r\n/**\r\n * draw function should take the audio analysis\r\n * on every half beat (tatum) change circle radius\r\n * have like a mild gradient from last radius to current radius \r\n * change circle colour every beat\r\n * change size according to volume\r\n * beat circle to tempo from API\r\n */\r\np.draw = function() {\r\n    p.clear();\r\n    var r = p.millis() / (1000 / (test.BPM / 60.0));\r\n    r -= p.int(r);\r\n    diameter = p.map(r,0,2.5,400,0); //map the bpm to diameter, and then change diameter each frame to increase/decrease based on tatums\r\n    // console.log(diameter)\r\n    // *slightly* slow down the seizure-inducing radial gradient effects\r\n    for (var i = 0; i < 7; i++) {\r\n        p.drawGradient(p.windowWidth/2, p.windowHeight/2)    \r\n    }\r\n}\r\n\r\np.getR = function(props) {\r\n    return props.tempo\r\n}\r\n\r\np.getDanceability = function(props) {\r\n    return props.danceability\r\n}\r\n\r\n//makes it look like a speaker driver bouncing around in a weird way\r\np.drawGradient = function(x, y) {\r\n    var radius = diameter / 2;\r\n    var randColor = p.random(0, 360);\r\n    for (var r = radius; r > 0; --r) {\r\n        p.fill(200, randColor, 120); //blue\r\n        p.ellipse(x, y, r, r);\r\n        randColor = (randColor + 1) % 69; //tried random numbers until it looked good\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}